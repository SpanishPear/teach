[{"/home/shrey/Documents/projects/teach/frontend/src/pages/homePage/index.js":"1","/home/shrey/Documents/projects/teach/frontend/src/routes/index.js":"2","/home/shrey/Documents/projects/teach/frontend/src/pages/tutorialPage/index.js":"3","/home/shrey/Documents/projects/teach/frontend/src/theme.js":"4","/home/shrey/Documents/projects/teach/frontend/src/pages/index.js":"5","/home/shrey/Documents/projects/teach/frontend/src/components/index.js":"6","/home/shrey/Documents/projects/teach/frontend/src/index.js":"7","/home/shrey/Documents/projects/teach/frontend/src/api/index.js":"8","/home/shrey/Documents/projects/teach/frontend/src/components/TutorialOverviewCard/index.js":"9","/home/shrey/Documents/projects/teach/frontend/src/components/TutorialDetailsCard/index.js":"10","/home/shrey/Documents/projects/teach/frontend/src/pages/tutorialContentPage/index.js":"11","/home/shrey/Documents/projects/teach/frontend/src/components/SlidesEmbed/index.js":"12","/home/shrey/Documents/projects/teach/frontend/src/components/ReplEmbed/index.js":"13","/home/shrey/Documents/projects/teach/frontend/src/pages/feedbackPage/index.js":"14"},{"size":2010,"mtime":1612871200482,"results":"15","hashOfConfig":"16"},{"size":614,"mtime":1613271854126,"results":"17","hashOfConfig":"16"},{"size":1152,"mtime":1612867947986,"results":"18","hashOfConfig":"16"},{"size":342,"mtime":1606873704949,"results":"19","hashOfConfig":"20"},{"size":306,"mtime":1613271707243,"results":"21","hashOfConfig":"16"},{"size":323,"mtime":1608034603434,"results":"22","hashOfConfig":"16"},{"size":669,"mtime":1613275402935,"results":"23","hashOfConfig":"16"},{"size":461,"mtime":1612867947986,"results":"24","hashOfConfig":"16"},{"size":2798,"mtime":1613276516340,"results":"25","hashOfConfig":"20"},{"size":1794,"mtime":1612316766209,"results":"26","hashOfConfig":"16"},{"size":3795,"mtime":1612875874992,"results":"27","hashOfConfig":"16"},{"size":740,"mtime":1608033975356,"results":"28","hashOfConfig":"16"},{"size":885,"mtime":1612867947986,"results":"29","hashOfConfig":"16"},{"size":6608,"mtime":1613276860516,"results":"30","hashOfConfig":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mnm4lk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uv6y58",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/home/shrey/Documents/projects/teach/frontend/src/pages/homePage/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/routes/index.js",[],["61","62","63","64","65"],"/home/shrey/Documents/projects/teach/frontend/src/pages/tutorialPage/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/theme.js",[],"/home/shrey/Documents/projects/teach/frontend/src/pages/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/components/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/index.js",["66"],"/home/shrey/Documents/projects/teach/frontend/src/api/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/components/TutorialOverviewCard/index.js",["67"],"/home/shrey/Documents/projects/teach/frontend/src/components/TutorialDetailsCard/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/pages/tutorialContentPage/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/components/SlidesEmbed/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/components/ReplEmbed/index.js",[],"/home/shrey/Documents/projects/teach/frontend/src/pages/feedbackPage/index.js",["68"],"/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Link,\n  Grid,\n  Button,\n  CssBaseline,\n  Slider,\n  TextField,\n  Checkbox,\n  RadioGroup,\n  FormLabel,\n  MenuItem,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#fafafa',\n    boxShadow: '0px 5px 20px 0px rgba(50, 50, 50, 0.52)',\n    padding: theme.spacing(5),\n    'padding-top': theme.spacing(1),\n  },\n\n  label: {\n    // marginLeft: theme.spacing(1), // not sure i like this tbh\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  spacing: {\n    marginTop: theme.spacing(2),\n  },\n  submit: {\n    color: 'white',\n    marginTop: 10,\n    display: 'block',\n  },\n}));\n\nconst Form = () => {\n  const classes = useStyles();\n  const { classcode, weeknumber } = useParams();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const history = useHistory();\n  const location = useLocation();\n  const [formData, setFormData] = useState({\n    zid: null,\n    confidence: 3,\n    speed: 3,\n    overall: 3,\n    share: false,\n    liked: null,\n    improved: null,\n    comments: null,\n  });\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formData);\n    history.goBack();\n\n    enqueueSnackbar('Succesfully submitted feedback! Thank you!!', {\n      variant: 'success',\n      autoHideDuration: 2000,\n    });\n  };\n  return (\n    <Box className={classes.paper} width=\"80%\" height=\"80%\">\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h4\" className={classes.label} gutterBottom>\n          Feedback for week {weeknumber} tutorial - (note, not live)\n        </Typography>\n\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          id=\"zid\"\n          autoFocus\n          label=\"zid - OPTIONAL, so I can see your progress!\"\n          onChange={(e) => {\n            // validation required?\n            setFormData({ ...formData, zid: e.target.value });\n          }}\n        />\n\n        <Typography id=\"\" className={classes.label} gutterBottom>\n          How confident did you feel with the content taught today?\n        </Typography>\n\n        <Slider\n          value={formData.confidence || 3}\n          getAriaValueText={(v) => `${v} points`}\n          valueLabelFormat={(v) => `${v}pts`}\n          aria-labelledby=\"discrete-points-slider\"\n          step={1}\n          marks={[\n            { value: 1, label: '1 - ???' },\n            { value: 2, label: '2' },\n            { value: 3, label: '3' },\n            { value: 4, label: '4' },\n            { value: 5, label: '5 - can do this in my sleep' },\n          ]}\n          min={1}\n          onChange={(_, val) => {\n            setFormData({ ...formData, confidence: val });\n          }}\n          max={5}\n        />\n\n        <Typography id=\"\" className={classes.label} gutterBottom>\n          How would you rate the tut overall?\n        </Typography>\n\n        <Slider\n          value={formData.overall || 3}\n          getAriaValueText={(v) => `${v} points`}\n          valueLabelFormat={(v) => `${v}pts`}\n          aria-labelledby=\"discrete-points-slider\"\n          step={1}\n          marks={[\n            { value: 1, label: '1' },\n            { value: 2, label: '2' },\n            { value: 3, label: '3' },\n            { value: 4, label: '4' },\n            { value: 5, label: '5' },\n          ]}\n          min={1}\n          onChange={(_, val) => {\n            setFormData({ ...formData, overall: val });\n          }}\n          max={5}\n        />\n        <Typography id=\"\" className={classes.label} gutterBottom>\n          How did you find the speed of delivery?\n        </Typography>\n\n        <Slider\n          value={formData.speed || 3}\n          getAriaValueText={(v) => `${v} points`}\n          valueLabelFormat={(v) => `${v}pts`}\n          aria-labelledby=\"discrete-points-slider\"\n          step={1}\n          marks={[\n            { value: 1, label: '1 - Literally falling asleep' },\n            { value: 2, label: '2' },\n            { value: 3, label: '3 - Perfect' },\n            { value: 4, label: '4' },\n            { value: 5, label: '5 - Too Fast!!' },\n          ]}\n          min={1}\n          onChange={(_, val) => {\n            setFormData({ ...formData, speed: val });\n          }}\n          max={5}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          id=\"standard-multiline-static\"\n          label=\"What did you like about the tut?\"\n          multiline\n          className={classes.spacing}\n          fullWidth\n          onChange={(e) => {\n            setFormData({ ...formData, liked: e.target.value });\n          }}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          id=\"standard-multiline-static\"\n          className={classes.spacing}\n          label=\"What do you think could be improved?\"\n          multiline\n          fullWidth\n          onChange={(e) => {\n            setFormData({ ...formData, improved: e.target.value });\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          id=\"standard-multiline-static\"\n          className={classes.spacing}\n          label=\"Any other comments: feedback, requests, or concerns?\"\n          multiline\n          fullWidth\n          onChange={(e) => {\n            setFormData({ ...formData, comments: e.target.value });\n          }}\n        />\n\n        <FormControlLabel\n          value=\"Permission to share (anonymously) with the class?\"\n          control={\n            <Checkbox\n              color=\"primary\"\n              checked={formData.share ?? true}\n              onChange={(e) => {\n                setFormData({ ...formData, share: e.target.checked });\n              }}\n            />\n          }\n          label=\"Permission to share (anonymously) with the class?\"\n          labelPlacement=\"start\"\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nconst Feedback = () => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      //   border=\"1px solid black\"\n    >\n      <CssBaseline />\n      <Form />\n    </Box>\n  );\n};\n\nexport default Feedback;\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":2,"message":"80","line":6,"column":34,"nodeType":"81","endLine":6,"endColumn":45},{"ruleId":"82","severity":1,"message":"83","line":90,"column":13,"nodeType":"84","messageId":"85","endLine":90,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":70,"column":5,"nodeType":"84","messageId":"85","endLine":70,"endColumn":16},"lines-around-directive",["86"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/no-unresolved","Unable to resolve path to module 'notistack'.","Literal","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]